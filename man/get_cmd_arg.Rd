% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/get_cmd_args.R
\name{get_cmd_arg}
\alias{get_cmd_arg}
\title{Get an argument that was passed from the command line}
\usage{
get_cmd_arg(which = 1, choices = NULL, allow_default = TRUE, convert = TRUE)
}
\arguments{
\item{which}{A number or a string. Defaults to \code{1}.}

\item{choices}{Vector of values that the argument
is allowed to take. If \code{NULL} (the default)
any value is allowed.}

\item{allow_default}{Whether to use the first element
of \code{choices} if no command line argument supplied.
Defaults to \code{TRUE}.}

\item{convert}{Whether to coerce numeric strings to
numeric. Defaults to \code{TRUE}.}
}
\value{
A number or string.
}
\description{
## NEED TO REVISE DESCRIPTION
}
\details{
Get the value for an argument that was supplied
when the file was run from the command line.
e.g. via \code{\link[utils]{Rscript}}.

\code{which} is used to select among command
line arguments if more than one was supplied.
\code{which} can be a number the name of an argument
if the argument was named, eg \code{--sex=Female}
or \code{-s=F}.

If \code{convert} is \code{TRUE} (the default), then
\code{get_cmd_arg} converts results to numeric where
it can, via function \code{\link[utils]{type.convert}}.
}
\examples{
## -- Run from the command line ------------------------

\dontrun{
## a file called 'foo.R' contains the lines
library(makr)
product <- 6 * 7
path_target <- path_target()
saveRDS(product, file = path_target)

## we have a shell script that contains the line
Rscript foo.R bar.rds

## running the shell script creates a
## file 'bar.rds' consisting of the number 42

## (see the article 'makr' for more complete examples)


## -- Use interactively --------------------------------

path_target(default = "product-high.rds")
}
}
\seealso{
\code{\link{mutate_filename}},
\code{\link{extract_filename_opt}},
\code{\link{get_fn_opt}}

\code{get_cmd_args} calls \code{\link[base]{commandArgs}}
to extract the command line arguments.
}
